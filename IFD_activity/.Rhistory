library(reshape2)
library(ggplot2)
library(scales)
setwd("C:/Users/user/Desktop/IFDxpersonality/IFD_activity/IFD_activity")
setwd("C:/Users/ocelo/Documents/IFD_activity/IFD_activity")
strID <- "Evol1ff"
str1 <- paste0(strID,"activities")
data <- read.table(paste0(str1, ".txt"), sep="\t", header = F)
df <- (t(subset(data, select = -c(V1, V1002))))
colnames(df) <- data$V1
length(df[1,])
minwv = 0.0;     # minimal (weight) value
maxwv = 1.0;     # maximal (weight) value
steps = 101;  # num. of bins across range
stepsize = (maxwv - minwv)/steps  # bin range size
mtrxwP1 <- matrix(nrow = steps, ncol = length(df[1,]), dimnames=list(seq(minwv+stepsize, maxwv, stepsize)))  # Frequency matrix
vecFpos <- vector()
for (i in 1:length(df[1,])){
vecFpos[i] = length(which(df[,i] > 0.05))/length(df[,1])
mtrxwP1[,i] = table(cut(df[,i], seq(minwv, maxwv, stepsize), right=T))/1000
}
colnames(mtrxwP1) <- data$V1
P_act <- ggplot(data = melt(t(mtrxwP1)), aes(x=Var1, y=Var2, fill=value)) + labs(x="generations", y="activity") +
geom_tile() + scale_fill_gradientn(colours = colorRampPalette(c("white", "red", "blue"))(3),
values = c(0, 0.05 , 1), space = "Lab", guide = FALSE) + geom_hline(yintercept = 0)+ theme_bw() +
theme(axis.title.x=element_text(size=16), axis.title.y=element_text(size=16), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),axis.line = element_line(colour = "black"), legend.position = "none")
P_act
strID <- "Evol2ff"
strID <- "Evol2ff"
str1 <- paste0(strID,"activities")
data <- read.table(paste0(str1, ".txt"), sep="\t", header = F)
str1
data <- read.table(paste0(str1, ".txt"), sep="\t", header = F)
df <- (t(subset(data, select = -c(V1, V1002))))
colnames(df) <- data$V1
length(df[1,])
minwv = 0.0;     # minimal (weight) value
maxwv = 1.0;     # maximal (weight) value
steps = 101;  # num. of bins across range
stepsize = (maxwv - minwv)/steps  # bin range size
mtrxwP1 <- matrix(nrow = steps, ncol = length(df[1,]), dimnames=list(seq(minwv+stepsize, maxwv, stepsize)))  # Frequency matrix
vecFpos <- vector()
for (i in 1:length(df[1,])){
vecFpos[i] = length(which(df[,i] > 0.05))/length(df[,1])
mtrxwP1[,i] = table(cut(df[,i], seq(minwv, maxwv, stepsize), right=T))/1000
}
colnames(mtrxwP1) <- data$V1
P_act <- ggplot(data = melt(t(mtrxwP1)), aes(x=Var1, y=Var2, fill=value)) + labs(x="generations", y="activity") +
geom_tile() + scale_fill_gradientn(colours = colorRampPalette(c("white", "red", "blue"))(3),
values = c(0, 0.05 , 1), space = "Lab", guide = FALSE) + geom_hline(yintercept = 0)+ theme_bw() +
theme(axis.title.x=element_text(size=16), axis.title.y=element_text(size=16), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),axis.line = element_line(colour = "black"), legend.position = "none")
P_act
strID <- "Evol2ff"
str1 <- paste0(strID,"activities")
data <- read.table(paste0(str1, ".txt"), sep="\t", header = F)
df <- (t(subset(data, select = -c(V1, V1002))))
colnames(df) <- data$V1
length(df[1,])
minwv = 0.0;     # minimal (weight) value
maxwv = 1.0;     # maximal (weight) value
steps = 101;  # num. of bins across range
stepsize = (maxwv - minwv)/steps  # bin range size
mtrxwP1 <- matrix(nrow = steps, ncol = length(df[1,]), dimnames=list(seq(minwv+stepsize, maxwv, stepsize)))  # Frequency matrix
vecFpos <- vector()
for (i in 1:length(df[1,])){
vecFpos[i] = length(which(df[,i] > 0.05))/length(df[,1])
mtrxwP1[,i] = table(cut(df[,i], seq(minwv, maxwv, stepsize), right=T))/1000
}
colnames(mtrxwP1) <- data$V1
P_act <- ggplot(data = melt(t(mtrxwP1)), aes(x=Var1, y=Var2, fill=value)) + labs(x="generations", y="activity") +
geom_tile() + scale_fill_gradientn(colours = colorRampPalette(c("white", "red", "blue"))(3),
values = c(0, 0.05 , 1), space = "Lab", guide = FALSE) + geom_hline(yintercept = 0)+ theme_bw() +
theme(axis.title.x=element_text(size=16), axis.title.y=element_text(size=16), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),axis.line = element_line(colour = "black"), legend.position = "none")
P_act
strID <- "Evol2ff"
str1 <- paste0(strID,"activities")
data <- read.table(paste0(str1, ".txt"), sep="\t", header = F)
df <- (t(subset(data, select = -c(V1, V1002))))
colnames(df) <- data$V1
length(df[1,])
minwv = 0.0;     # minimal (weight) value
maxwv = 1.0;     # maximal (weight) value
steps = 101;  # num. of bins across range
stepsize = (maxwv - minwv)/steps  # bin range size
mtrxwP1 <- matrix(nrow = steps, ncol = length(df[1,]), dimnames=list(seq(minwv+stepsize, maxwv, stepsize)))  # Frequency matrix
vecFpos <- vector()
for (i in 1:length(df[1,])){
vecFpos[i] = length(which(df[,i] > 0.05))/length(df[,1])
mtrxwP1[,i] = table(cut(df[,i], seq(minwv, maxwv, stepsize), right=T))/1000
}
colnames(mtrxwP1) <- data$V1
P_act <- ggplot(data = melt(t(mtrxwP1)), aes(x=Var1, y=Var2, fill=value)) + labs(x="generations", y="activity") +
geom_tile() + scale_fill_gradientn(colours = colorRampPalette(c("white", "red", "blue"))(3),
values = c(0, 0.05 , 1), space = "Lab", guide = FALSE) + geom_hline(yintercept = 0)+ theme_bw() +
theme(axis.title.x=element_text(size=16), axis.title.y=element_text(size=16), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),axis.line = element_line(colour = "black"), legend.position = "none")
P_act
length(df[1,])
strID <- "Evol2ff"
str1 <- paste0(strID,"activities")
data <- read.table(paste0(str1, ".txt"), sep="\t", header = F)
df <- (t(subset(data, select = -c(V1, V1002))))
colnames(df) <- data$V1
length(df[1,])
minwv = 0.0;     # minimal (weight) value
maxwv = 1.0;     # maximal (weight) value
steps = 101;  # num. of bins across range
stepsize = (maxwv - minwv)/steps  # bin range size
mtrxwP1 <- matrix(nrow = steps, ncol = length(df[1,]), dimnames=list(seq(minwv+stepsize, maxwv, stepsize)))  # Frequency matrix
vecFpos <- vector()
for (i in 1:length(df[1,])){
vecFpos[i] = length(which(df[,i] > 0.05))/length(df[,1])
mtrxwP1[,i] = table(cut(df[,i], seq(minwv, maxwv, stepsize), right=T))/1000
}
colnames(mtrxwP1) <- data$V1
P_act <- ggplot(data = melt(t(mtrxwP1)), aes(x=Var1, y=Var2, fill=value)) + labs(x="generations", y="activity") +
geom_tile() + scale_fill_gradientn(colours = colorRampPalette(c("white", "red", "blue"))(3),
values = c(0, 0.05 , 1), space = "Lab", guide = FALSE) + geom_hline(yintercept = 0)+ theme_bw() +
theme(axis.title.x=element_text(size=16), axis.title.y=element_text(size=16), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),axis.line = element_line(colour = "black"), legend.position = "none")
P_act
strID <- "Evol2ff"
str1 <- paste0(strID,"activities")
data <- read.table(paste0(str1, ".txt"), sep="\t", header = F)
df <- (t(subset(data, select = -c(V1, V1002))))
colnames(df) <- data$V1
length(df[1,])
minwv = 0.0;     # minimal (weight) value
maxwv = 1.0;     # maximal (weight) value
steps = 101;  # num. of bins across range
stepsize = (maxwv - minwv)/steps  # bin range size
mtrxwP1 <- matrix(nrow = steps, ncol = length(df[1,]), dimnames=list(seq(minwv+stepsize, maxwv, stepsize)))  # Frequency matrix
vecFpos <- vector()
for (i in 1:length(df[1,])){
vecFpos[i] = length(which(df[,i] > 0.05))/length(df[,1])
mtrxwP1[,i] = table(cut(df[,i], seq(minwv, maxwv, stepsize), right=T))/1000
}
colnames(mtrxwP1) <- data$V1
P_act <- ggplot(data = melt(t(mtrxwP1)), aes(x=Var1, y=Var2, fill=value)) + labs(x="generations", y="activity") +
geom_tile() + scale_fill_gradientn(colours = colorRampPalette(c("white", "red", "blue"))(3),
values = c(0, 0.05 , 1), space = "Lab", guide = FALSE) + geom_hline(yintercept = 0)+ theme_bw() +
theme(axis.title.x=element_text(size=16), axis.title.y=element_text(size=16), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),axis.line = element_line(colour = "black"), legend.position = "none")
P_act
strID <- "Evol2ff"
str1 <- paste0(strID,"activities")
data <- read.table(paste0(str1, ".txt"), sep="\t", header = F)
df <- (t(subset(data, select = -c(V1, V1002))))
colnames(df) <- data$V1
length(df[1,])
minwv = 0.0;     # minimal (weight) value
maxwv = 1.0;     # maximal (weight) value
steps = 101;  # num. of bins across range
stepsize = (maxwv - minwv)/steps  # bin range size
mtrxwP1 <- matrix(nrow = steps, ncol = length(df[1,]), dimnames=list(seq(minwv+stepsize, maxwv, stepsize)))  # Frequency matrix
vecFpos <- vector()
for (i in 1:length(df[1,])){
vecFpos[i] = length(which(df[,i] > 0.05))/length(df[,1])
mtrxwP1[,i] = table(cut(df[,i], seq(minwv, maxwv, stepsize), right=T))/1000
}
colnames(mtrxwP1) <- data$V1
P_act <- ggplot(data = melt(t(mtrxwP1)), aes(x=Var1, y=Var2, fill=value)) + labs(x="generations", y="activity") +
geom_tile() + scale_fill_gradientn(colours = colorRampPalette(c("white", "red", "blue"))(3),
values = c(0, 0.05 , 1), space = "Lab", guide = FALSE) + geom_hline(yintercept = 0)+ theme_bw() +
theme(axis.title.x=element_text(size=16), axis.title.y=element_text(size=16), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),axis.line = element_line(colour = "black"), legend.position = "none")
P_act
df <- (t(subset(data, select = -c(V1, V102))))
colnames(df) <- data$V1
length(df[1,])
minwv = 0.0;     # minimal (weight) value
maxwv = 1.0;     # maximal (weight) value
steps = 101;  # num. of bins across range
stepsize = (maxwv - minwv)/steps  # bin range size
mtrxwP1 <- matrix(nrow = steps, ncol = length(df[1,]), dimnames=list(seq(minwv+stepsize, maxwv, stepsize)))  # Frequency matrix
vecFpos <- vector()
for (i in 1:length(df[1,])){
vecFpos[i] = length(which(df[,i] > 0.05))/length(df[,1])
mtrxwP1[,i] = table(cut(df[,i], seq(minwv, maxwv, stepsize), right=T))/1000
}
colnames(mtrxwP1) <- data$V1
P_act <- ggplot(data = melt(t(mtrxwP1)), aes(x=Var1, y=Var2, fill=value)) + labs(x="generations", y="activity") +
geom_tile() + scale_fill_gradientn(colours = colorRampPalette(c("white", "red", "blue"))(3),
values = c(0, 0.05 , 1), space = "Lab", guide = FALSE) + geom_hline(yintercept = 0)+ theme_bw() +
theme(axis.title.x=element_text(size=16), axis.title.y=element_text(size=16), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),axis.line = element_line(colour = "black"), legend.position = "none")
P_act
